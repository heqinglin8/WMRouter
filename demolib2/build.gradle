if(isRunAlone.toBoolean()){
    apply plugin: 'com.android.application'
    apply plugin: 'WMRouter'
}else{
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion build_versions.compile_sdk_version
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //强制前缀
//        resourcePrefix deps.resourcePrefix.demolib2
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isRunAlone.toBoolean()) {
                manifest.srcFile 'src/main/runalone/AndroidManifest.xml'
                java.srcDirs = ['src/main/java','src/main/runalone/java']
                res.srcDirs = ['src/main/res','src/main/runalone/res']
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude 'runalone/**'
                }
            }
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    implementation deps.support.app_compat
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    annotationProcessor project(path: ':compiler')
    api project(path: ':lib')

//    implementation deps.moduleevent.moduleevent
    implementation (deps.moduleevent.moduleevent){
        exclude group: 'androidx.lifecycle'
    }
    implementation deps.moduleevent.interfaces
    annotationProcessor deps.moduleevent.compiler

    implementation project(':export:demolib2-export')
}
